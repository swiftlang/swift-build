//===----------------------------------------------------------------------===//
//
// This source file is part of the Swift open source project
//
// Copyright (c) 2024 Apple Inc. and the Swift project authors
// Licensed under Apache License v2.0 with Runtime Library Exception
//
// See http://swift.org/LICENSE.txt for license information
// See http://swift.org/CONTRIBUTORS.txt for the list of Swift project authors
//
//===----------------------------------------------------------------------===//

(
    {
        _Domain = driverkit;
        Type = BuildSettings;
        Identifier = com.apple.build-settings.driverkit;
        Name = "DriverKit Additional Core Build Settings";
        Properties = (
            {
                Name = "EMBEDDED_PROFILE_NAME";
                Type = String;
                DefaultValue = "embedded.provisionprofile";
            },
        );
    },

    {
        _Domain = driverkit;
        Type = Architecture;
        Identifier = Standard;
        Name = "Standard architectures";
        ListInEnum = YES;
        SortNumber = 0;
        RealArchitectures = (
            "arm64",
            "x86_64",
        );
        ArchitectureSetting = "ARCHS_STANDARD";
    },

    {
        _Domain = driverkit;
        Type = Architecture;
        Identifier = Universal;
        Name = "Universal";
        Description = "32- and 64-bit architectures";
        RealArchitectures = (
            "arm64",
            "x86_64",
        );
        ArchitectureSetting = "ARCHS_STANDARD_32_64_BIT";
    },
    {
        _Domain = driverkit;
        Type = Architecture;
        Identifier = Standard64bit;
        Name = "64-bit standard architectures";
        Description = "64-bit standard architectures";
        RealArchitectures = (
            "arm64",
            "x86_64",
        );
        ArchitectureSetting = "ARCHS_STANDARD_64_BIT";
    },
    {
        _Domain = driverkit;
        Type = Architecture;
        Identifier = Standard_Including_64_bit;
        Name = "Standard architectures (including 64-bit)";
        RealArchitectures = (
            "arm64",
            "x86_64",
        );
        ArchitectureSetting = "ARCHS_STANDARD_INCLUDING_64_BIT";
    },

    {
        _Domain = driverkit;
        Type = Architecture;
        Identifier = "x86_64";
        Name = "Intel 64-bit";
        Description = "64-bit Intel";
        PerArchBuildSettingName = "Intel 64-bit";
    },
    {
        _Domain = driverkit;
        Type = Architecture;
        Identifier = arm64;
        Name = "arm64";
        Description = "arm64";
        PerArchBuildSettingName = "arm64";
    },
    {
        _Domain = driverkit;
        Type = Architecture;
        Identifier = arm64e;
        Name = "arm64e";
        Description = "arm64e";
        PerArchBuildSettingName = "arm64e";
        CompatibilityArchitectures = arm64;
    },
)
